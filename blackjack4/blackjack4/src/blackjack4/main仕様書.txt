CanBattle boolean型の変数
playing boolean型の変数
main()
　playingがtrueである限りくりかえす
　　game()を呼び出す
　　playing　←　retry()の帰り値


reset() void
「いろいろ始める前の準備をする」
  canbattleをtrueに初期化する
  Player.reset()とcom.reset()を呼び出す

start() void
　「両者にカードをcard.give()で2枚ずつ配る」
　両者のgetsum()とcheck()を呼び出す

PlayerChoice() void
　「プレイヤーのターン」
  player.choice()がtrueを返す時
   カードを1枚渡す
　　player.check()がfalseの時
　　　自分を呼び出す
　　player.check()がtrueの時　　
      操作を終わらせる(何も起こさない)

ComChoice() void
　「コンピュータのターン」
  com.choice()がtrueの時
　　カードを一枚渡す
　com.check()がfalseの時
　　自分を呼び出す

burst() void
「バーストしたかどうか調べる」
　com.check()とplayer.check()がtrueを返す時
　　Canbattle　←　false
　com.check()がtrueを返す時
　　Canbattle　←　false
　　result("コンピュータ")を呼び出す
　player.check()がtrueを返す時
　　Canbattle　←　false
　　result("プレイヤー")を呼び出す

battle() void
「本編」
  両者の合計を比較する、大きい方を勝者とする
　　result(勝った方)
　引き分け
　　result("draw")

retry()
　「もう一度やるか尋ねる」
　InOk = false boolean型の変数
  answer boolean型の変数
　str string型の変数
  InOk = falseである限りくりかえす
　　str ←　入力した文字
　　strを小文字化する
　　str == yes || str == y
　　　answer　←　true
  　str == no || str == n
    　answer　←　false
　  他のパターン
　　　無視
　answerを返す

game()
「ゲームの基本の流れ」
　reset()を呼び出す
　start()を呼び出す
　burst()を呼び出す
　Canbattle　== trueの時
    PlayerChoice()
　　ComChoice()
　　burst()
　Canbattle　== trueの時
    battle()
　　
　
後ですべてのフローチャートを作る


とりあえず　今は継承を使わないで完成させる
